[package]
name = "client"
version = "2.0.2"
edition = "2021"

[dependencies]
bigdecimal = "0.1.0"
num-bigint = "0.2.6"
mio = "0.6.8"
clap = "2"
textwrap = "0.9"
toml = "0.5.8"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_derive = "1.0"
parking_lot = "0.11"
io = { path = "../util/io" }
mazzekey = { path = "../mazze_key" }
mazzecore-accounts = { path = "../accounts" }
mazzestore = { path = "../mazze_store" }
mazze-internal-common = { path = "../mazzecore/internal_common" }
mazze-executor = { path = "../mazzecore/executor" }
mazze-execute-helper = { path = "../mazzecore/execute-helper" }
mazze-statedb = { path = "../dbs/statedb" }
mazze-storage = { path = "../dbs/storage" }
mazze-vm-types = { path = "../mazzecore/vm-types" }
app_dirs = "1.2.1"
dir = { git = "https://github.com/MazzeLabs/mazze-parity-deps", rev = "223e9acc6f7ba9f1b296639f08b326a72d7b92fa"  }
ctrlc = { git = "https://github.com/paritytech/rust-ctrlc.git", rev="b523017108bb2d571a7a69bd97bc406e63bc7a9d" }
jsonrpc-core = "15.1.0"
jsonrpc-tcp-server = "15.1.0"
jsonrpc-http-server = "15.1.0"
jsonrpc-derive = "15.1.0"
jsonrpc-core-client = "15.1.0"
jsonrpc-pubsub = "15.1.0"
jsonrpc-ws-server = "15.1.0"
error-chain = { version = "0.12" }
lazy_static = "1.4"
log = "0.4"
mazze-types = { path = "../mazze_types" }
mazze-addr = { path = "../mazze_addr" }
mazze-bytes = { path = "../mazze_bytes" }
runtime = { path = "../util/runtime" }
slab = "0.4"
mazzecore = { path = "../mazzecore/core" }
network = { path = "../network" }
db = { path = "../dbs/db" }
blockgen = { path = "../blockgen" }
txgen = { path = "../transactiongen" }
secret-store = { path = "../secret_store" }
primitives = { path = "../primitives" }
log4rs = { version = "1.2.0", features = ["background_rotation", "gzip"] }
rlp = "0.4.0"
keccak-hash = "0.5"
rand = "0.7.2"
rand_08 = {package = "rand", version = "0.8.0"}
kvdb-rocksdb = {path= "../dbs/kvdb-rocksdb" }
tempdir = "0.3"
rustc-hex = "2.1"
threadpool = "1.0"
metrics = { path = "../util/metrics" }
delegate = { path = "../util/delegate" }
transient-hashmap = "0.4"
rand_xorshift = "0.2"
itertools = "0.9"
order-stat = "0.1"
futures01 = "0.1"
futures = { version = "0.3.3", features = ["compat"] }
rayon = "1.2.0"
throttling = { path = "../util/throttling" }
tokio = { version = "1.6", features = ["full"] }
tokio-stream = "0.1.4"
tokio-timer = "0.2.13"
malloc_size_of = {path = "../util/malloc_size_of" }
random-crash = { path = "../util/random_crash" }
mazze-parameters = { path = "../mazzecore/parameters" }
strum = "0.20"
strum_macros = "0.20"
crash-handler = { path = "../mazzecore/core/src/pos/common/crash-handler" }
cached-pos-ledger-db = { path = "../mazzecore/core/src/pos/storage/cached-pos-ledger-db" }
pos-ledger-db = { path = "../mazzecore/core/src/pos/storage/pos-ledger-db" }
diem-channel = {path = "../mazzecore/core/src/pos/common/channel", package = "channel"}
diem-config = { path = "../mazzecore/core/src/pos/config" }
diem-crypto = { path = "../mazzecore/core/src/pos/crypto/crypto" }
diem-logger = { path = "../mazzecore/core/src/pos/common/logger" }
diem-metrics = { path = "../mazzecore/core/src/pos/common/metrics" }
diem-secure-storage = { path = "../mazzecore/core/src/pos/secure/storage" }
diem-temppath = { path = "../mazzecore/core/src/pos/common/temppath" }
diem-time-service = { path = "../mazzecore/core/src/pos/common/time-service" }
diem-types = { path = "../mazzecore/core/src/pos/types" }
pow-types = {path = "../mazzecore/core/src/pos/types/pow-types" }
executor-types = { path = "../mazzecore/core/src/pos/types/executor-types" }
executor = { path = "../mazzecore/core/src/pos/consensus/executor" }
fail = "0.4.0"
storage-interface = { path = "../mazzecore/core/src/pos/storage/storage-interface" }
consensus-types = {path = "../mazzecore/core/src/pos/consensus/consensus-types" }
anyhow = "1.0.38"
rpassword = "5.0.1"
static_assertions = "1.1.0"
parity-version = {path = "../util/version" }
solidity-abi = {path= "../util/solidity-abi" }
bls-signatures = {git = "https://github.com/MazzeLabs/bls-signatures.git", rev = "0cf4158a4d17d1405d3bdc10dd4065e4e00e88dd", default-features = false, features = ["multicore"]}
alloy-rpc-types-trace = { workspace = true }
geth-tracer = { path = "../mazzecore/geth-tracer" }
serde-utils = { path = "../serde_utils" }

[dev-dependencies]
criterion = "0.3"
mazze-parameters = { path = "../mazzecore/parameters" }
mazze-executor = { path = "../mazzecore/executor", features = ["testonly_code"] }
serial_test = "0.5.1"

[features]
# Unfortunately cfg test attributes doesn't work across crates,
# we have to define a feature for test code.
# https://users.rust-lang.org/t/cfg-test-doesnt-propagate-to-external-crates/13046
testonly_code = []
u64_mpt_db_key = ["mazze-storage/u64_mpt_db_key"]

[[bench]]
name = "benchmark"
harness = false
