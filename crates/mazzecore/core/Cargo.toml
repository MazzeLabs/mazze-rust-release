[package]
description = "Mazze core library"
homepage = "https://www.mazze.io"
license = "GPL-3.0"
name = "mazzecore"
version = "2.0.2"
edition = "2021"

[dependencies]
bit-set = "0.4"
substrate-bn = { git = "https://github.com/paritytech/bn", default-features = false, rev="63f8c587356a67b33c7396af98e065b66fca5dda" }
byteorder = "1.0"
mazzekey = { path = "../../mazze_key" }
mazze-addr = { path = "../../mazze_addr" }
mazze-bytes = { path = "../../mazze_bytes" }
mazze-math = { path = "../../mazze_math" }
mazze-internal-common = { path = "../internal_common" }
mazze-parameters = { path = "../parameters" }
mazze-statedb = { path = "../../dbs/statedb" }
mazze-storage = { path = "../../dbs/storage", optional = true }
mazze-vm-tracer-derive = {path= "../../util/mazze-vm-tracer-derive" }
mazze-types = { path = "../../mazze_types" }
mazze-utils = { path = "../../mazze_utils" }
mazze-vm-types = { path = "../vm-types" }
mazze-vm-interpreter = { path = "../vm-interpreter" }
mazze-executor = { path = "../executor" }
mazze-execute-helper = { path = "../execute-helper" }
channel = { path = "src/pos/common/channel" }
clap = "2"
dag = {path = "../../util/dag" }
derivative = "2.0.2"
db = { path = "../../dbs/db" }
either = "1.5.3"
error-chain = { version = "0.12", default-features = false }
fallible-iterator = "0.2"
fs_extra = "1.1.0"
futures = {version="0.3.3", features = ["compat"]}
hashbrown = "0.7.1"
hibitset = { path = "../../util/hibitset" }
itertools = "0.9"
io = { path = "../../util/io" }
jsonrpc-core = "15.1.0"
keccak-hash = "0.5"
kvdb = "0.4"
kvdb-rocksdb = {path= "../../dbs/kvdb-rocksdb" }
lazy_static = "1.4"
link-cut-tree = { path = "../../util/link-cut-tree" }
log = "0.4"
log4rs = { version = "1.2.0", features = ["background_rotation", "gzip"] }
lru_time_cache = "0.9.0"
malloc_size_of = {path = "../../util/malloc_size_of" }
malloc_size_of_derive = {path = "../../util/malloc_size_of_derive" }
memmap = "0.6"
memoffset = "0.5.1"
memory-cache = { path = "../../util/memory-cache" }
metrics = { path = "../../util/metrics" }
network = { path = "../../network" }
num = "0.2"
num-traits = { version = "0.2.8", default-features = false }
parity-crypto = "0.9.0"
parking_lot = "0.11"
primal = "0.2.3"
primitives = { path = "../../primitives" }
priority-send-queue = { path = "../../util/priority-send-queue" }
prometheus = { version = "0.7.0", default-features = false }
rand = "0.7"
rand_08 = {package = "rand", version = "0.8"}
rand_xorshift="0.2"
random-crash = { path = "../../util/random_crash" }
rayon = "1.0"
rlp = "0.4.0"
rlp_derive = { git = "https://github.com/MazzeLabs/mazze-parity-deps", rev = "223e9acc6f7ba9f1b296639f08b326a72d7b92fa"  }
rustc-hex = "2.1"
secret-store = { path = "../../secret_store" }
serde = { version = "1.0", features = ["rc"] }
serde_derive = "1.0"
serde_json = "1.0"
siphasher = "0.3"
slab = "0.4"
solidity-abi = {path= "../../util/solidity-abi" }
solidity-abi-derive = {path= "../../util/solidity-abi-derive" }
sha3-macro = {path= "../../util/sha3-macro" }
sqlite = "0.25"
sqlite3-sys = "0.12"
static_assertions = "1.1.0"
strfmt = "0.1"
tempdir = "0.3"
threadpool = "1.0"
throttling = { path = "../../util/throttling" }
toml = "0.5.8"
tokio02 = { version = "0.2", package="tokio", features = ["full"] }
tokio = { version = "1.6", features = ["full"] }
tokio-timer = "0.2.13"
tokio-stream = "0.1.4"
unexpected = { git = "https://github.com/MazzeLabs/mazze-parity-deps", rev = "223e9acc6f7ba9f1b296639f08b326a72d7b92fa"  }
strum = "0.20"
strum_macros = "0.20"
smart-default = "0.6.0"
bls-signatures = {git = "https://github.com/MazzeLabs/bls-signatures.git", rev = "0cf4158a4d17d1405d3bdc10dd4065e4e00e88dd", default-features = false, features = ["multicore"]}
tiny-keccak = {version = "2.0",  features = ["keccak"]}
bcs = "0.1.2"
async-trait = "0.1"
num-derive = { version = "0.3.3", default-features = false }
thiserror = "1.0.24"
fallible = { path = "src/pos/common/fallible" }
mirai-annotations = { version = "1.10.1", default-features = false }
bounded-executor = { path = "src/pos/common/bounded-executor" }
diem-config = { path = "src/pos/config" }
diem-crypto = { path = "src/pos/crypto/crypto" }
diem-infallible = { path = "src/pos/common/infallible" }
diem-logger = { path = "src/pos/common/logger" }
diem-metrics = { path = "src/pos/common/metrics" }
diem-secure-storage = { path = "src/pos/secure/storage" }
diem-types = { path = "src/pos/types" }
executor-types = { path = "src/pos/types/executor-types" }
executor = {path = "src/pos/consensus/executor" }
consensus-types = { path = "src/pos/consensus/consensus-types" }
safety-rules = { path = "src/pos/consensus/safety-rules" }
pos-ledger-db = { path = "src/pos/storage/pos-ledger-db" }
cached-pos-ledger-db = { path = "src/pos/storage/cached-pos-ledger-db" }
schemadb = { path = "src/pos/storage/schemadb" }
storage-interface = { path = "src/pos/storage/storage-interface" }
short-hex-str = { path = "src/pos/common/short-hex-str" }
subscription-service = { path = "src/pos/common/subscription-service" }
fail = "0.4.0"
anyhow = "1.0.38"
once_cell = "1.7.2"
move-core-types = { path = "src/pos/types/move-core-types" }
pow-types = {path = "src/pos/types/pow-types" }
async-oneshot = "0.5.0"
proptest = { version = "1.0.0", optional = true }
proptest-derive = { version = "0.3.0", optional = true }
diem-temppath = { path = "src/pos/common/temppath" }
crash-handler = { path = "src/pos/common/crash-handler" }
heap-map = {path = "../../util/heap-map" }
impl-trait-for-tuples = "^0.2"
impl-tools = "^0.10"
treap-map = {path = "../../util/treap-map" }
mazze-packing-pool = { path = "../packing-pool" }
alloy-rpc-types-trace = { workspace = true }
geth-tracer = { path = "../geth-tracer" }
randomx-rs = "1.3.0"

[dev-dependencies]
criterion = "0.3"
mazze-storage = { path = "../../dbs/storage", features = ["testonly_code"] }
mazze-vm-types = { path = "../vm-types", features = ["testonly_code"] }
proptest = "1.0.0"
proptest-derive = "0.3.0"
consensus-types = { path = "src/pos/consensus/consensus-types", features = ["fuzzing"] }
#tokio = { version = "0.2.11", features = ["time"] }

[dependencies.parity-util-mem]
version = "0.5"
default-features = false

[features]
default = ["mazze-storage"]
# Unfortunately cfg test attributes doesn't work across crates,
# we have to define a feature for test code.
# https://users.rust-lang.org/t/cfg-test-doesnt-propagate-to-external-crates/13046
testonly_code = []
fuzzing = ["proptest", "proptest-derive"]
bls-blst = ["bls-signatures/blst", "diem-crypto/bls-blst"]
bls-pairing = ["bls-signatures/pairing", "diem-crypto/bls-pairing"]
blst-portable = ["bls-signatures/blst-portable", "diem-crypto/blst-portable"]